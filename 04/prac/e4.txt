---------------------------------------------------------
[E4] 第5章 関数(1) に関する考察・感想用テンプレート
---------------------------------------------------------

課題： E4
学生番号： 37022465
氏名： 高橋 由
作成日： 5/2/2023


（注意）【以下は確認の上，消去してからレポート提出を行って下さい】
  ・ プログラミングの力がつかないため，他の学生・先輩などが作成したプ
       ログラムをコピーすることは厳禁です．

  ・ 各課題に対して，
      - 学習内容（どのようなプログラムを作成したか，この課題を通して学んだ事項，
           作成中に間違えた箇所，など）
      - 結果（結果を報告する．実行結果も貼り付けよ）
      - 習得した内容，苦労した点，工夫した点，考察など
     について必ず記すこと．

  ・ プログラムが完成次第，1問ごとにその都度以下のレポート欄に
       記入して下さい．あとからまとめて記そうとすると，書くべき事項を
       忘れることが多くあります．

-----------------------------------------------
(E4_1)

学習内容：
商品の購入個数を乗じた金額に加えて、レジ袋代が5円加算されるプログラムを作成する。

結果：
./a.out
購入個数を入力してください >> 5
支払金額は505円です。

習得した内容・反省・考察など：
計算する部分を関数に切り出すことで実現した。

-----------------------------------------------
(E4_2) 

学習内容：
整数xを引数とし、f(x)=2x2-5x+3の値を戻り値とする関数polynomialを作成する。

結果：
./a.out
整数を入力してください >> 5
f(1) = 0
f(2) = 1
f(3) = 6
f(4) = 15
f(5) = 28

習得した内容・反省・考察など：
for文内で関数を複数回呼び出すことで実現した。

-----------------------------------------------
(E4_3) 

学習内容：
1から10までの値を引数として関数print_intを呼び出すプログラムを作成する。

結果：
./a.out
your number is 1 
your number is 2 
your number is 3 
your number is 4 
your number is 5 
your number is 6 
your number is 7 
your number is 8 
your number is 9 
your number is 10

習得した内容・反省・考察など：
print_intには戻り値がないがこれでよいのか
 -> 「空」を表すvoid型にすることで戻り値がないことを明示しているため、問題ない。

-----------------------------------------------
(E4_4) 

学習内容：
四角錐の体積を計算して下記を出力するプログラムを作成する。

結果：
./a.out
 i pyramid
 5 58.333
 6 96.000
 7 147.000
 8 213.333
 9 297.000
10 400.000

習得した内容・反省・考察など：
関数内で計算を行い、main関数のfor文内で出力することで実現した。その際、出力値のフォーマットに気をつけた。

-----------------------------------------------
(E4_5) 

学習内容：
半径と中心角が与えられた扇形の面積を計算するプログラムを作成する。

結果：
./a.out
半径を入力してください >> 5
中心角を入力してください >> 80
半径が5, 中心学が80 である扇形の面積は17.45です。

習得した内容・反省・考察など：
math.hをインクルードし、関数内で定数M_PIを使用して面積を求めることで実現した。

-----------------------------------------------
(E4_6) 

学習内容：
1以上n以下の整数の和を計算するプログラムを作成する。

結果：
// 修正前
./a.out
整数を入力してください >>  6
for文による計算結果は 21 です。
和の公式による計算結果は 18 です。

./a.out
整数を入力してください >> 5
for文による計算結果は 15 です。
和の公式による計算結果は 15 です。

// 修正後
./a.out
整数を入力してください >>  6
for文による計算結果は 21 です。
和の公式による計算結果は 21 です。

./a.out
整数を入力してください >> 5
for文による計算結果は 15 です。
和の公式による計算結果は 15 です。

習得した内容・反省・考察など：
誤った結果となるのは、nが偶数のときである。
 -> `(n + 1) * n / 2;` とすることで修正できる。

-----------------------------------------------
(E4_7) 

学習内容：
元々の関数と逆関数の値を出力するプログラムを作成する。

結果：
./a.out
2以上の整数を入力してください >> 5
x=2, f(x)=-2, f-1(f(x))=2
x=3, f(x)=-1, f-1(f(x))=3
x=4, f(x)=2, f-1(f(x))=4
x=5, f(x)=7, f-1(f(x))=5

習得した内容・反省・考察など：
func関数の返り値をそのままinverse関数の引数にすることで実現した。

-----------------------------------------------
(E4_8) 

学習内容：
プログラムの間違い探し

結果：
// 修正前
e4_8.c:14:21: error: too many arguments to function call, expected 1, have 2
  ck = char_plus(c, k);
       ~~~~~~~~~    ^
e4_8.c:3:5: note: 'char_plus' declared here
int char_plus(int);
    ^
e4_8.c:19:7: error: call to undeclared function 'ssum'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]
  y = ssum(x, n);
      ^
e4_8.c:20:39: warning: format specifies type 'int' but the argument has type 'double' [-Wformat]
  printf("x = %d, n = %d, y = %f \n", x, n, y);
              ~~                      ^
              %f
e4_8.c:20:42: warning: format specifies type 'int' but the argument has type 'double' [-Wformat]
  printf("x = %d, n = %d, y = %f \n", x, n, y);
                      ~~                 ^
                      %f
e4_8.c:26:6: error: conflicting types for 'char_plus'
char char_plus(char c, int k)
     ^
e4_8.c:3:5: note: previous declaration is here
int char_plus(int);
    ^
e4_8.c:32:6: error: conflicting types for 'char_plus'
char char_plus(char c, int k)
     ^
e4_8.c:3:5: note: previous declaration is here
int char_plus(int);
    ^
e4_8.c:38:8: error: conflicting types for 'ssum'
double ssum(double x, int k)
       ^
e4_8.c:19:7: note: previous implicit declaration is here
  y = ssum(x, n);
      ^
2 warnings and 5 errors generated.

// 修正後
'f' の 3 個後の文字は 'i' です
x = 2, n = 5, y = 1.968750

習得した内容・反省・考察など：
変更点: 
- char_plus関数が3回宣言されていたため、3行目の宣言を削除し、「文字cの(k+3)個後の文字を返す」方の関数をchar_plus_threeと関数名を変更した。
- C言語に於いては、処理を実行する時点で関数が宣言されていなければならない、つまり、関数の宣言は関数の呼び出しより前に行う必要がある。そのため、全ての関数をmain関数より前で宣言した。

-----------------------------------------------
(E4_9*) 

学習内容：
自然数を素因数分解するプログラムを作成する。

結果：
./a.out
自然数を入力してください >> 756 
756 -> 2 2 3 3 3 7

習得した内容・反省・考察など：
素因数分解のアルゴリズムを理解することができた。具体的には、for文で2から入力された自然数の値まで回し、その中でwhile文を回して割り切れる数を出力することで実現した。

-----------------------------------------------
[E4] 全体に対する感想などを以下に記すこと．
所要時間： ( 1 ) 時間

感想: 
今回の課題では、関数の宣言や関数の返り値の型、関数の引数の型など、関数に関する知識を深めることができた。
また、関数の宣言は関数の呼び出しより前に行う必要があることを学んだ。
